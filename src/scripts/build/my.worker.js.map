{
  "version": 3,
  "sources": ["../event.worker.ts", "../my.worker.ts"],
  "sourcesContent": ["\r\ntype EventCallback = (cog: any) => void\r\n\r\nclass Tree {\r\n    tree = {}\r\n    proxy = {}\r\n    refs = {}\r\n    imports = {}\r\n    constructor(){}\r\n}\r\n\r\nclass CoreWorker extends Tree{\r\n    constructor(){\r\n        super()\r\n    }\r\n    private set_imports(){\r\n        const items = document.querySelectorAll('script[ref_href_lib]')\r\n        items.forEach(item => {\r\n            this.imports[item.getAttribute('ref_href_lib') || ''] = window[item.getAttribute('name_href_lib') || '']\r\n        })\r\n    }\r\n    private deep_proxy(container, callback){\r\n        const handler:ProxyHandler<Object> = {\r\n            get: (target, prop, receiver) => {\r\n                const value = Reflect.get(target, prop, receiver);\r\n                if (typeof value == 'object' && value !== null) {\r\n                  return this.deep_proxy(value, callback);\r\n                }\r\n                return value;\r\n            },\r\n            set: (target, prop, receiver) => {\r\n                target[prop] = receiver\r\n                callback(container, target, prop, receiver)\r\n                return true\r\n            }\r\n        }\r\n        return new Proxy(this.proxy, handler)\r\n    }\r\n    private proxy_callback = (container, target, prop, receiver) => {\r\n        const items = document.querySelectorAll(`[proxy_data=\"${prop}\"]`)\r\n        items.forEach(item => {// TODO create tree separated by dots\r\n            //this.proxy[item.getAttribute('proxy_data') || ''] = target\r\n            item.textContent = this.proxy[item.getAttribute('proxy_data') || '']\r\n        })\r\n    }\r\n    private set_refs(){\r\n        const items = document.querySelectorAll('[ref]')\r\n        items.forEach(item => {\r\n            this.refs[item.getAttribute('ref') || ''] = item\r\n        })\r\n    }\r\n    init(): CoreWorker{\r\n        this.set_imports()\r\n        this.set_refs()\r\n        this.proxy = this.deep_proxy(this.proxy, this.proxy_callback)\r\n        return this\r\n    }\r\n    $on_event(query:string, event:string, callback: EventCallback){\r\n        const self = document.querySelector(query) \r\n        if(!this.tree[query])\r\n            this.tree[query] = {}\r\n        self?.addEventListener(event, () => {\r\n            callback({\r\n                self,\r\n                item: this.tree[query],\r\n                proxy: this.proxy,\r\n                refs: this.refs,\r\n                imports: this.imports\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const CARBEE_WORKER = new CoreWorker().init()\r\n\r\nwindow.onload = () => {\r\n    \r\n}\r\n", "import { CARBEE_WORKER } from \"./event.worker\";\n(() => {CARBEE_WORKER.$on_event('p[v_d0320c42]', 'click', (cog) => {\n        console.log('pyk');\n        console.log(cog.item);\n        console.log(cog.self);\n        console.log(cog.proxy);\n        cog.proxy['little'] = 'ok';\n        console.log(cog.imports.crypto.SHA256(\"Message\").toString());\n        cog.proxy.tg = '10';\n    })})();(() => {CARBEE_WORKER.$on_event('p[v_b6108e72]', 'click', (cog) => {\n        console.log('pyk');\n        console.log(cog.item);\n        console.log(cog.proxy);\n    })})();"],
  "mappings": "AAGA,IAAMA,EAAN,KAAW,CAKP,aAAa,CAJb,UAAO,CAAC,EACR,WAAQ,CAAC,EACT,UAAO,CAAC,EACR,aAAU,CAAC,CACG,CAClB,EAEMC,EAAN,cAAyBD,CAAI,CACzB,aAAa,CACT,MAAM,EAyBV,KAAQ,eAAiB,CAACE,EAAWC,EAAQC,EAAMC,IAAa,CAC9C,SAAS,iBAAiB,gBAAgBD,KAAQ,EAC1D,QAAQE,GAAQ,CAElBA,EAAK,YAAc,KAAK,MAAMA,EAAK,aAAa,YAAY,GAAK,EAAE,CACvE,CAAC,CACL,CA9BA,CACQ,aAAa,CACH,SAAS,iBAAiB,sBAAsB,EACxD,QAAQA,GAAQ,CAClB,KAAK,QAAQA,EAAK,aAAa,cAAc,GAAK,EAAE,EAAI,OAAOA,EAAK,aAAa,eAAe,GAAK,EAAE,CAC3G,CAAC,CACL,CACQ,WAAWJ,EAAWK,EAAS,CACnC,IAAMC,EAA+B,CACjC,IAAK,CAACL,EAAQC,EAAMC,IAAa,CAC7B,IAAMI,EAAQ,QAAQ,IAAIN,EAAQC,EAAMC,CAAQ,EAChD,OAAI,OAAOI,GAAS,UAAYA,IAAU,KACjC,KAAK,WAAWA,EAAOF,CAAQ,EAEjCE,CACX,EACA,IAAK,CAACN,EAAQC,EAAMC,KAChBF,EAAOC,CAAI,EAAIC,EACfE,EAASL,EAAWC,EAAQC,EAAMC,CAAQ,EACnC,GAEf,EACA,OAAO,IAAI,MAAM,KAAK,MAAOG,CAAO,CACxC,CAQQ,UAAU,CACA,SAAS,iBAAiB,OAAO,EACzC,QAAQF,GAAQ,CAClB,KAAK,KAAKA,EAAK,aAAa,KAAK,GAAK,EAAE,EAAIA,CAChD,CAAC,CACL,CACA,MAAkB,CACd,YAAK,YAAY,EACjB,KAAK,SAAS,EACd,KAAK,MAAQ,KAAK,WAAW,KAAK,MAAO,KAAK,cAAc,EACrD,IACX,CACA,UAAUI,EAAcC,EAAcJ,EAAwB,CAC1D,IAAMK,EAAO,SAAS,cAAcF,CAAK,EACrC,KAAK,KAAKA,CAAK,IACf,KAAK,KAAKA,CAAK,EAAI,CAAC,GACxBE,GAAM,iBAAiBD,EAAO,IAAM,CAChCJ,EAAS,CACL,KAAAK,EACA,KAAM,KAAK,KAAKF,CAAK,EACrB,MAAO,KAAK,MACZ,KAAM,KAAK,KACX,QAAS,KAAK,OAClB,CAAC,CACL,CAAC,CACL,CACJ,EAEaG,EAAgB,IAAIZ,EAAW,EAAE,KAAK,EAEnD,OAAO,OAAS,IAAM,CAEtB,EC5EQa,EAAc,UAAU,gBAAiB,QAAUC,GAAQ,CAC3D,QAAQ,IAAI,KAAK,EACjB,QAAQ,IAAIA,EAAI,IAAI,EACpB,QAAQ,IAAIA,EAAI,IAAI,EACpB,QAAQ,IAAIA,EAAI,KAAK,EACrBA,EAAI,MAAM,OAAY,KACtB,QAAQ,IAAIA,EAAI,QAAQ,OAAO,OAAO,SAAS,EAAE,SAAS,CAAC,EAC3DA,EAAI,MAAM,GAAK,IACnB,CAAC,EAAcD,EAAc,UAAU,gBAAiB,QAAUC,GAAQ,CACtE,QAAQ,IAAI,KAAK,EACjB,QAAQ,IAAIA,EAAI,IAAI,EACpB,QAAQ,IAAIA,EAAI,KAAK,CACzB,CAAC",
  "names": ["Tree", "CoreWorker", "container", "target", "prop", "receiver", "item", "callback", "handler", "value", "query", "event", "self", "CARBEE_WORKER", "CARBEE_WORKER", "cog"]
}
